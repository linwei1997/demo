<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.EquipmentMapper">
  <resultMap id="BaseResultMap" type="com.demo.model.Equipment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="equipment_name" jdbcType="VARCHAR" property="equipmentName" />
    <result column="equipment_status" jdbcType="CHAR" property="equipmentStatus" />
    <result column="equipment_address" jdbcType="VARCHAR" property="equipmentAddress" />
    <result column="equipment_company" jdbcType="VARCHAR" property="equipmentCompany" />
    <result column="enable_flag" jdbcType="CHAR" property="enableFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, equipment_name, equipment_status, equipment_address, equipment_company, 
    enable_flag
  </sql>
  <select id="selectByExample" parameterType="com.demo.model.EquipmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from equipment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from equipment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from equipment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.demo.model.EquipmentExample">
    delete from equipment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.demo.model.Equipment">
    insert into equipment (id, user_id, equipment_name, 
      equipment_status, equipment_address, equipment_company, 
      enable_flag)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{equipmentName,jdbcType=VARCHAR}, 
      #{equipmentStatus,jdbcType=CHAR}, #{equipmentAddress,jdbcType=VARCHAR}, #{equipmentCompany,jdbcType=VARCHAR}, 
      #{enableFlag,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.model.Equipment">
    insert into equipment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="equipmentName != null">
        equipment_name,
      </if>
      <if test="equipmentStatus != null">
        equipment_status,
      </if>
      <if test="equipmentAddress != null">
        equipment_address,
      </if>
      <if test="equipmentCompany != null">
        equipment_company,
      </if>
      <if test="enableFlag != null">
        enable_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="equipmentName != null">
        #{equipmentName,jdbcType=VARCHAR},
      </if>
      <if test="equipmentStatus != null">
        #{equipmentStatus,jdbcType=CHAR},
      </if>
      <if test="equipmentAddress != null">
        #{equipmentAddress,jdbcType=VARCHAR},
      </if>
      <if test="equipmentCompany != null">
        #{equipmentCompany,jdbcType=VARCHAR},
      </if>
      <if test="enableFlag != null">
        #{enableFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.demo.model.EquipmentExample" resultType="java.lang.Long">
    select count(*) from equipment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <update id="updateByExampleSelective" parameterType="map">
    update equipment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.equipmentName != null">
        equipment_name = #{record.equipmentName,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentStatus != null">
        equipment_status = #{record.equipmentStatus,jdbcType=CHAR},
      </if>
      <if test="record.equipmentAddress != null">
        equipment_address = #{record.equipmentAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentCompany != null">
        equipment_company = #{record.equipmentCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.enableFlag != null">
        enable_flag = #{record.enableFlag,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update equipment
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      equipment_name = #{record.equipmentName,jdbcType=VARCHAR},
      equipment_status = #{record.equipmentStatus,jdbcType=CHAR},
      equipment_address = #{record.equipmentAddress,jdbcType=VARCHAR},
      equipment_company = #{record.equipmentCompany,jdbcType=VARCHAR},
      enable_flag = #{record.enableFlag,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.model.Equipment">
    update equipment
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="equipmentName != null">
        equipment_name = #{equipmentName,jdbcType=VARCHAR},
      </if>
      <if test="equipmentStatus != null">
        equipment_status = #{equipmentStatus,jdbcType=CHAR},
      </if>
      <if test="equipmentAddress != null">
        equipment_address = #{equipmentAddress,jdbcType=VARCHAR},
      </if>
      <if test="equipmentCompany != null">
        equipment_company = #{equipmentCompany,jdbcType=VARCHAR},
      </if>
      <if test="enableFlag != null">
        enable_flag = #{enableFlag,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.model.Equipment">
    update equipment
    set user_id = #{userId,jdbcType=INTEGER},
      equipment_name = #{equipmentName,jdbcType=VARCHAR},
      equipment_status = #{equipmentStatus,jdbcType=CHAR},
      equipment_address = #{equipmentAddress,jdbcType=VARCHAR},
      equipment_company = #{equipmentCompany,jdbcType=VARCHAR},
      enable_flag = #{enableFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--查询设备-->
  <select id="list" resultType="java.util.Map">
    SELECT
    b.id,
    b.equipment_name,
    b.equipment_status,
    b.equipment_address,
    b.equipment_company,
    c.check_order,
    c.check_title,
    c.check_content,
    c.check_status
    FROM
    `user` a,
    equipment b
    LEFT JOIN ( SELECT equipment_id, check_order, check_title, check_content, check_status FROM `check` WHERE enable_flag = '1' ) c ON b.id = c.equipment_id
    WHERE
    a.user_id = b.user_id
    <if test='userName != null and userName != ""'>
      AND a.user_name = #{userName}
    </if>
    <if test='equipmentName != null and equipmentName != ""'>
      AND a.equipment_name = #{equipmentName}
    </if>
    AND a.enable_flag = '1'
    AND b.enable_flag = '1'
  </select>
</mapper>